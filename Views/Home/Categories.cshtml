@using assignment2.Models
@model IEnumerable<CategoryViewModel>

@{
    ViewBag.Title = "Product Classification";
}

<h2 style="text-align: center; color: #5c4033;">@ViewBag.Title</h2>

<div class="row" style="background-color: #deb887; padding: 20px;">
    @foreach (var category in Model)
    {
        <div class="col-md-3 col-sm-6 col-xs-12 mb-4">
            <div class="card h-100" style="background-color: #fdf4e3; border-radius: 5px; box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.2);">
                <img class="card-img-top img-fluid" src="@Url.Content(category.ImageUrl)" alt="@category.Name" style="height: 200px; object-fit: cover;">
                <div class="card-body d-flex flex-column">
                    <h5 class="card-title" style="color: #8b4513;">@category.Name</h5>
                    
                    <p class="card-text" style="color: #5c4033;">@category.Description</p>
                    <a href="@Url.Action("Category", "Home", new { category = category.Name })" class="btn btn-primary mt-auto">Check</a>
                </div>
            </div>
        </div>
    }
</div>

<style>
    .card-img-top {
        width: 100%; /* Make sure image covers 100% of card width */
        object-fit: cover; /* This will cover the area without stretching the picture */
    }

    .card {
        /* Optional: If you want all cards to have the same height */
        display: flex;
        flex-direction: column;
    }

    .card-body {
        /* Makes sure that button sticks to the bottom */
        display: flex;
        flex-direction: column;
    }
</style>